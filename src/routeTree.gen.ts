/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as GamesRouteRouteImport } from './routes/games/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as GamesIndexRouteImport } from './routes/games/index'
import { Route as GamesIdRouteImport } from './routes/games/$id'
import { Route as AuthenticatedAdminRouteRouteImport } from './routes/_authenticated/Admin/route'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/Admin/index'
import { Route as AuthenticatedAdminMonthRouteImport } from './routes/_authenticated/Admin/month'
import { Route as AuthenticatedAdminCategoriesRouteImport } from './routes/_authenticated/Admin/categories'
import { Route as AuthenticatedAdminAllRouteImport } from './routes/_authenticated/Admin/All'
import { Route as AuthenticatedAdminIdRouteImport } from './routes/_authenticated/Admin/$id'
import { Route as AuthenticatedAdminUpdateProductIdRouteImport } from './routes/_authenticated/Admin/updateProduct/$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesRouteRoute = GamesRouteRouteImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const GamesIndexRoute = GamesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GamesRouteRoute,
} as any)
const GamesIdRoute = GamesIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => GamesRouteRoute,
} as any)
const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteRouteImport.update({
  id: '/Admin',
  path: '/Admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const AuthenticatedAdminMonthRoute = AuthenticatedAdminMonthRouteImport.update({
  id: '/month',
  path: '/month',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const AuthenticatedAdminCategoriesRoute =
  AuthenticatedAdminCategoriesRouteImport.update({
    id: '/categories',
    path: '/categories',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminAllRoute = AuthenticatedAdminAllRouteImport.update({
  id: '/All',
  path: '/All',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const AuthenticatedAdminIdRoute = AuthenticatedAdminIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const AuthenticatedAdminUpdateProductIdRoute =
  AuthenticatedAdminUpdateProductIdRouteImport.update({
    id: '/updateProduct/$id',
    path: '/updateProduct/$id',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/games': typeof GamesRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/Admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/games/$id': typeof GamesIdRoute
  '/games/': typeof GamesIndexRoute
  '/Admin/$id': typeof AuthenticatedAdminIdRoute
  '/Admin/All': typeof AuthenticatedAdminAllRoute
  '/Admin/categories': typeof AuthenticatedAdminCategoriesRoute
  '/Admin/month': typeof AuthenticatedAdminMonthRoute
  '/Admin/': typeof AuthenticatedAdminIndexRoute
  '/Admin/updateProduct/$id': typeof AuthenticatedAdminUpdateProductIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/games/$id': typeof GamesIdRoute
  '/games': typeof GamesIndexRoute
  '/Admin/$id': typeof AuthenticatedAdminIdRoute
  '/Admin/All': typeof AuthenticatedAdminAllRoute
  '/Admin/categories': typeof AuthenticatedAdminCategoriesRoute
  '/Admin/month': typeof AuthenticatedAdminMonthRoute
  '/Admin': typeof AuthenticatedAdminIndexRoute
  '/Admin/updateProduct/$id': typeof AuthenticatedAdminUpdateProductIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/games': typeof GamesRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/_authenticated/Admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/games/$id': typeof GamesIdRoute
  '/games/': typeof GamesIndexRoute
  '/_authenticated/Admin/$id': typeof AuthenticatedAdminIdRoute
  '/_authenticated/Admin/All': typeof AuthenticatedAdminAllRoute
  '/_authenticated/Admin/categories': typeof AuthenticatedAdminCategoriesRoute
  '/_authenticated/Admin/month': typeof AuthenticatedAdminMonthRoute
  '/_authenticated/Admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/Admin/updateProduct/$id': typeof AuthenticatedAdminUpdateProductIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/games'
    | '/about'
    | '/signin'
    | '/signup'
    | '/Admin'
    | '/games/$id'
    | '/games/'
    | '/Admin/$id'
    | '/Admin/All'
    | '/Admin/categories'
    | '/Admin/month'
    | '/Admin/'
    | '/Admin/updateProduct/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/signin'
    | '/signup'
    | '/games/$id'
    | '/games'
    | '/Admin/$id'
    | '/Admin/All'
    | '/Admin/categories'
    | '/Admin/month'
    | '/Admin'
    | '/Admin/updateProduct/$id'
  id:
    | '__root__'
    | '/'
    | '/games'
    | '/_authenticated'
    | '/about'
    | '/signin'
    | '/signup'
    | '/_authenticated/Admin'
    | '/games/$id'
    | '/games/'
    | '/_authenticated/Admin/$id'
    | '/_authenticated/Admin/All'
    | '/_authenticated/Admin/categories'
    | '/_authenticated/Admin/month'
    | '/_authenticated/Admin/'
    | '/_authenticated/Admin/updateProduct/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GamesRouteRoute: typeof GamesRouteRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/': {
      id: '/games/'
      path: '/'
      fullPath: '/games/'
      preLoaderRoute: typeof GamesIndexRouteImport
      parentRoute: typeof GamesRouteRoute
    }
    '/games/$id': {
      id: '/games/$id'
      path: '/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof GamesIdRouteImport
      parentRoute: typeof GamesRouteRoute
    }
    '/_authenticated/Admin': {
      id: '/_authenticated/Admin'
      path: '/Admin'
      fullPath: '/Admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/Admin/': {
      id: '/_authenticated/Admin/'
      path: '/'
      fullPath: '/Admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/Admin/month': {
      id: '/_authenticated/Admin/month'
      path: '/month'
      fullPath: '/Admin/month'
      preLoaderRoute: typeof AuthenticatedAdminMonthRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/Admin/categories': {
      id: '/_authenticated/Admin/categories'
      path: '/categories'
      fullPath: '/Admin/categories'
      preLoaderRoute: typeof AuthenticatedAdminCategoriesRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/Admin/All': {
      id: '/_authenticated/Admin/All'
      path: '/All'
      fullPath: '/Admin/All'
      preLoaderRoute: typeof AuthenticatedAdminAllRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/Admin/$id': {
      id: '/_authenticated/Admin/$id'
      path: '/$id'
      fullPath: '/Admin/$id'
      preLoaderRoute: typeof AuthenticatedAdminIdRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/Admin/updateProduct/$id': {
      id: '/_authenticated/Admin/updateProduct/$id'
      path: '/updateProduct/$id'
      fullPath: '/Admin/updateProduct/$id'
      preLoaderRoute: typeof AuthenticatedAdminUpdateProductIdRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
  }
}

interface GamesRouteRouteChildren {
  GamesIdRoute: typeof GamesIdRoute
  GamesIndexRoute: typeof GamesIndexRoute
}

const GamesRouteRouteChildren: GamesRouteRouteChildren = {
  GamesIdRoute: GamesIdRoute,
  GamesIndexRoute: GamesIndexRoute,
}

const GamesRouteRouteWithChildren = GamesRouteRoute._addFileChildren(
  GamesRouteRouteChildren,
)

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminIdRoute: typeof AuthenticatedAdminIdRoute
  AuthenticatedAdminAllRoute: typeof AuthenticatedAdminAllRoute
  AuthenticatedAdminCategoriesRoute: typeof AuthenticatedAdminCategoriesRoute
  AuthenticatedAdminMonthRoute: typeof AuthenticatedAdminMonthRoute
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminUpdateProductIdRoute: typeof AuthenticatedAdminUpdateProductIdRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminIdRoute: AuthenticatedAdminIdRoute,
    AuthenticatedAdminAllRoute: AuthenticatedAdminAllRoute,
    AuthenticatedAdminCategoriesRoute: AuthenticatedAdminCategoriesRoute,
    AuthenticatedAdminMonthRoute: AuthenticatedAdminMonthRoute,
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminUpdateProductIdRoute:
      AuthenticatedAdminUpdateProductIdRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GamesRouteRoute: GamesRouteRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
